scalar Upload

 type Query{
    getAdminFechaRegistro(data: [String]!):admin
    getAdminDashboard(data: [String]!):admin
    getUsersTableEmployeesthisPeriodo(data: [String]!):[JsonEmployee]
    getUsersTableEmployeesthisPeriodoATS(data: [String]!):[JsonEmployee]
    getUsersTableEmployeesthisPeriodoEEO(data: [String]!):[JsonEmployee]
    getUsersTableEmployees(data:[String]):[JsonEmployee]
    resultSingleSurvey(data: [String]!):[ respuestas]
    resultSingleSurveyRP(data: [String]!):[ respuestasRP]
    resultSingleSurveyEEO(data: [String]!):[ respuestasEEO]
    getSucursales(data:String):[Sucursales]
    getDeptos(data:String):[Deptos]
    getPuestos(data:String):[Puestos]
    getPonderacion(data: [String]!):[resultPonderacion]
    getPonderacionEEO(data: [String]!):[resultPonderacion]
    getEmployeesResolvesSurveyATS(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyATSFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyRP(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyRPFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyEEO(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyEEOFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesATSDetectado(data: [String]!):[MaxidEmployeesResolves]
    countEmployees(data: [String]!):[idEmployees]
    getEmployeesResolvesRP(data: [String]!):[Employees]
    getEmployeesResolvesATS(data: [String]!):[Employees]
    getresultGlobalSurveyRP(data: [String]!):[ respuestasRP]
    getEmployeesResolvesEEO(data: [String]!):[Employees]
    getresultGlobalSurveyEEO(data: [String]!):[ respuestasEEO]
    getresultGlobalSurveyATS(data:[String]!):[respuestasATS]
    employeeActive(data: [String]!):[employeActive]
    deptoActive(data: [String]!):[depActive]
    sucActive(data: [String]!):[sucuActive]
    puestoActive(data: [String]!):[puesActive]
    getPeriodo(data: [String]!):[periodo]
    getallPeriodo(data: [String]!):[periodo]
    getPeriodoDesabilited(data: [String]!):[periodo]
    getEventos(data: [String]!):Data
    getEmployeesFkAdmin(data: [String]!):[JsonEmployee]
    getEmpresas(data: [String]!):[DataAdmin]
    verifyPackSuperUser(data: [String]!):Pack
    countEmpresas(data: [String]!):Pack
    getAdminAlfa(data: [String]!):[adminAlfa]
    getImage(data: [String]!):Data
    getCorreos(data: [String]!):[correos]
    getLogo(data:[String!]):Url
    resetPassword(data:[String!]):Data
    getCardPay(data:[String!]):CardPay
    getCardPayRealizada(data:[String!]):CardPay
    verifiDataSuperUser(data:[String!]):Data
    getSuperUser(data:[String!]):superUserData
    getRenovacion(data:[String!]):[CardPay]
    getPromocion(data:[String!]):[Promocion]
    getAllSuperUser(data:[String!]):[superUser]
 }        
 
type Mutation {
  cardPay(data:[String]!):Auth!
  registroSuperUser(data:[String]!):Auth!
  signupAdminAlfa(data: UserCreateInput!): Auth! 
  login(email: String!, password: String!): Auth!
  loginAdminAlfa(email: String!, password: String!): Auth!
  loginEmpresas(rfc: String!, password: String!): Auth!
  createUser(data: UserCreateInput!): Auth!
  registerEmployee(data:[String]!):Data!
  registerRS(data:[String]):Data
  atsPage1(data:[String]!):Data!
  atsPage2(data:[String]!):Data!
  atsPage3(data:[String]!):Data!
  atsPage4(data:[String]!):Data!

  rpPage1(data:[String]!):Data!
  rpPage2(data:[String]!):Data!
  rpPage3(data:[String]!):Data!
  rpPage4(data:[String]!):Data!
  rpPage5(data:[String]!):Data!
  rpPage6(data:[String]!):Data!
  rpPage7(data:[String]!):Data!
  rpPage8(data:[String]!):Data!

  rpValidadorPage7(data:[String]!):Data!
  rpValidadorPage8(data:[String]!):Data!

  eeoPage1(data:[String]!):Data!
  eeoPage2(data:[String]!):Data!
  eeoPage3(data:[String]!):Data!
  eeoPage4(data:[String]!):Data!
  eeoPage5(data:[String]!):Data!
  eeoPage6(data:[String]!):Data!
  eeoPage7(data:[String]!):Data!
  eeoPage8(data:[String]!):Data!
  eeoPage9(data:[String]!):Data!
  eeoPage10(data:[String]!):Data!
  eeoPage11(data:[String]!):Data!
  eeoPage12(data:[String]!):Data!
  eeoPage13(data:[String]!):Data!
  eeoPage14(data:[String]!):Data!

  rpPoliticaPrivacidad(data:[String]!):SurveyData!
  atsPoliticaPrivacidad(data:[String]!):SurveyData!
  eeoPoliticaPrivacidad(data:[String]!):SurveyData!

 sendMail(data:[String]!):Data!
 getAdmin(data:[String]!):[Admin]
 authRegisterSingleEmployee(data:[String]!):[regMAx]
  inactiveAdmin(data:[String]!):Auth!
  registerSucursales(data:[String]!):Data!
  registerApartments(data:[String]!):Data!
  registerPuesto(data:[String]!):Data!
  deleteEmployees(data:[String]!):Data!  
  deleteSucursales(data:[String]!):Data!  
  deleteDeptos(data:[String]!):Data! 
  deletePuestos(data:[String]!):Data! 

  updateEmployees(data:[String]!):Data! 
  updateSucursales(data:[String]!):Data! 
  updateDeptos(data:[String]!):Data! 
  updatePuestos(data:[String]!):Data! 
  addPeriodo(data:[String]!):Data! 
  deletePeriodo(data: [String]!):[Data]
  addPeriodoInicial(data: [String]!):Data
  addAdminEmpresa(data: [String]!):Auth
  editDataAdmin(data:[String!]):Data
  alert1(data:[String!]):Data
  alert2(data:[String!]):Data
  alert3(data:[String!]):Data
  updatePeriodo(data:[String!]):Data
  loadLogo(data:[String!]):Data
  updatePassword(data:[String!]):Data
  updateLogo(data:[String!]):Data
  updateCardPay(data:[String!]):Data
  renovationLicence(data:[String!]):Data
  addPromotions(data:[String!]):Data
  approvedPromotion(data:[String!]):Data
  rejectPromotion(data:[String!]):Data
}

type Url {
  url:String
}

type superUser {
    id:String,
    nombre:String,
    apellidos:String,
    RFC:String,
    RazonSocial:String,
    telefono:String,
    correo:String,
    fechaRegistro:String,
    fk_paquetes:String,
    activo:String
}
type Promocion{
  idPromocion:String,
  nombre:String,
  apellidos:String,
  rfc:String,
  razonSocial:String,
  telefono:String,
  correo:String
  noFactura:String
}
type superUserData {
id:String,
message:String,
nombre:String,
apellidos:String,
RFC:String,
RazonSocial:String,
telefono:String,
correo:String,
fechaRegistro:String,
fk_paquetes:String,
empresas:String,
empleados:String
}
type Sucursales {
id:String,
nombreSucursal:String,
calle:String,
numExt:String,
numInt:String,
colonia:String,
CP:String,
Ciudad:String,
Estado:String,
actividad:String,
telefono:String,
actividades:String,
fk_administrador:String

}

type resultPonderacion  {
id:String
siempre:String
casisiempre:String
algunasveces:String
casinunca:String
nunca:String
}

type Deptos {
id:String,
nombre:String,
fk_Administrador:String
}
type Pack{
  empresas:String,
  empleados:String
  id:String
}

type Puestos {
id:String,
nombre:String,
fk_Administrador:String
}

type resCorreo{
ATSContestado:String
}
type resCorreoRP {
  RPContestado:String
}
type resCorreoEEO {
  EEOContestado:String
}

type adminAlfa{
  nombreAdmin:String,
  apellidosAdmin:String,
  correo:String,
  fechaVenta:String,
  rfc:String,
  empresas:String,
  empleados:String
   RazonSocial:String
  RFC:String
  telefono:String
}

type Employees{
  id:String
  nombre:String
  ApellidoP:String,
  ApellidoM:String,
  Sexo:String
  AreaTrabajo:String
  Puesto:String
  CentroTrabajo:String
  periodo:String,
  ATSDetectado:String,
  Respuestas:String, 
  fk_preguntasEEO:String,
  ponderacion:String,
}


type  JsonEmployee{

  id:String,
  nombre: String,
  ApellidoP: String,
  ApellidoM:String,
  Curp:String,
  RFC:String,
  FechaNacimiento:String,
  Sexo:String,
  EstadoCivil:String,
  correo:String,
  AreaTrabajo:String,
  Puesto:String,
  TipoPuesto:String,
  NivelEstudios:String,
  TipoPersonal:String,
  JornadaTrabajo:String,
  TipoContratacion:String,
  TiempoPuesto:String,
  ExperienciaLaboral:String,
  RotacionTurnos:String,
  fk_administrador:String,
  ATSContestado:String,
  RPContestado:String,
  EEOContestado:String
  CentroTrabajo:String,
  ATSDetectado:String
}

type Auth {
message:String!
token:String
id:String
nombre:String
Apellidos:String
RFC:String
RazonSocial:String
telefono:String
correo:String
activo:String
fechaRegistro:String
}

type DataAdmin {
id:String
nombre:String
Apellidos:String
RFC:String
RazonSocial:String
correo:String

}
type regMAx{

max:String!

}


type respuestas {
    id:String,
    Respuestas:String,
    fk_preguntasATS:String,
    fk_Empleados:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    TipoPuesto:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}

    type employeActive{
    id:String, 
    EmpleadoActivo:String,

    }
       type depActive{
    id:String, 
    DepartamentoActivo:String,

    }
   type sucuActive{
    id:String, 
    SucursalActiva:String,

    }
  type puesActive{
    id:String, 
    PuestoActivo:String,

    }
type periodo {
  idEventos:String
  fk_administrador:String
  Descripcion:String
  EventoActivo:String
  Alerta1Enviada:String
  Alerta2Enviada:String
  Alerta3Enviada:String
  evento:String
  eventoFinal:String
  alerta1:String
  alerta2:String
  alerta3:String
             
}
type respuestasRP {
    id:String,
    Respuestas:String,
    fk_preguntasRP:String,
    fk_empleadosRP:String,
    ponderacion:String,
    Periodo:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    TipoPuesto:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}

type respuestasEEO {
    id:String,
    Respuestas:String,
    fk_preguntasEEO:String,
    fk_empleados:String,
    ponderacion:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    TipoPuesto:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}
type respuestasATS{
    id:String,
    Respuestas:String,
    fk_preguntasATS:String,
    fk_Empleados:String,
    ponderacion:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    TipoPuesto:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    CentroTrabajo:String,
    fk_administrador:String,
    fk_correos:String
}

type Admin {
id:String!
 }
input UserCreateInput {
  idAdminAlfa:String
  fecha:String
  id:String
  first_name: String
  last_name: String
  rfc:String
  razon_social:String
  telefono:String,
  email: String
  password: String
  paquete:String
  correoAdminAlfa:String
 
}



input InsertData {
idempresas:Int!
rfc:String!
razon_social:String!
telefono1:String!
telefono2:String
email1:String!
email2:String!
direccion:String!
}


type CardPay {
  idRenovacion:String,
  ids:String
  idPago:String,
  fechaPago:String,
  carrito:String,
  idPaypalCliente:String,
  nombrePaypalCliente:String,
  apellidosPaypalCliente:String,
  correoPaypalCliente:String,
  ciudadClientePaypal:String,
  direccion1PaypalCliente:String,
  direccion2PaypalCliente:String,
  cpPaypalCliente:String,
  estadoPaypalCliente:String,
  metodoPago:String,
  statusPago:String,
  subtotalTransaccion:String,
  montoTransaccion:String,
  monedaTransaccion:String,
  nombrecliente:String,
  apellidosCliente:String,
  rfcCliente:String,
  razonSocialCliente:String,
  telefonoCliente:String,
  correoCliente:String,
  paquete:String,
  noFactura:String,
  fechaExpiracionLicencia:String
  fk_superusuario:String
}

# type File {
#     email: String!
#   }

type SurveyData {
  nombre:String
  ApellidoP:String
  ApellidoM:String
  correo:String
  fk_administrador:String
  message: String
}

type Data {
  message: String,
  eventoFinal:String,
  alerta1:String,
  alerta2:String,
  alerta3:String,
  image:String,
  valor1:String
  valor2:String
  valor3:String
  nombre:String
  apellidoP:String
  apellidoM:String
  nombreExistente:String
  apellidoPExistente:String
  apellidoMExistente:String
}

type MaxidEmployeesResolves{
  id:String
  nombre:String
  ApellidoP:String
  ApellidoM:String
  correo:String
  ATSContestado:String
  CentroTrabajo:String
}
type idEmployees{
id:String

}
type admin {
id:String,
fechaRegistro:String
nombreAdmin:String,
Apellidos:String,
RFC:String,
RazonSocial:String,
correo:String,
Activo:String,
fk_superusuario:String,
objetivo:String
}

type correos{
  Encuesta:String
  fecha:String
  nombre:String
  ApellidoP:String
  ApellidoM:String
  Curp:String
}