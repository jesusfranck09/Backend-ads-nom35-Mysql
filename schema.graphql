scalar Upload

 type Query{
     getUsersTableEmployees(email:String):[JsonEmployee]
     resultSingleSurvey(data: [String]!):[ respuestas]
     resultSingleSurveyRP(data: [String]!):[ respuestasRP]
     resultSingleSurveyEEO(data: [String]!):[ respuestasEEO]
     verifiEmailSurveyATS(data: [String]!):[resCorreo]    
     verifiEmailSurveyRP(data: [String]!):[resCorreoRP] 
     verifiEmailSurveyEEO(data: [String]!):[resCorreoEEO] 
     getSucursales(data:String):[Sucursales]
     getDeptos(data:String):[Deptos]
     getPuestos(data:String):[Puestos]
     getPonderacion(data: [String]!):[resultPonderacion]
    getPonderacionEEO(data: [String]!):[resultPonderacion]
    getEmployeesResolvesSurveyATS(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyATSFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyRP(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyRPFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyEEO(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesResolvesSurveyEEOFalse(data: [String]!):[MaxidEmployeesResolves]
    getEmployeesATSDetectado(data: [String]!):[MaxidEmployeesResolves]
    countEmployees(data: [String]!):[idEmployees]
    getEmployeesResolvesRP(data: [String]!):[Employees]
    getresultGlobalSurveyRP(data: [String]!):[ respuestasRP]
    getEmployeesResolvesEEO(data: [String]!):[Employees]
    getresultGlobalSurveyEEO(data: [String]!):[ respuestasEEO]
    employeeActive(data: [String]!):[employeActive]
    deptoActive(data: [String]!):[depActive]
    sucActive(data: [String]!):[sucuActive]
    puestoActive(data: [String]!):[puesActive]
    getPeriodo(data: [String]!):[periodo]
    getPeriodoDesabilited(data: [String]!):[periodo]
    getEventos(data: [String]!):Data
 }        

 
type Mutation {
  signup(data: UserCreateInput!): Auth!
  login(email: String!, password: String!): Auth!
  createUser(data: UserCreateInput!): Auth!
  registerEmployee(data:[String]!):Data!
  registerRS(data:[String]):Data
  registerSingleEmployee(data:[String]!):Data!
  atsPage1(data:[String]!):Data!
  atsPage2(data:[String]!):Data!
  atsPage3(data:[String]!):Data!
  atsPage4(data:[String]!):Data!

  rpPage1(data:[String]!):Data!
  rpPage2(data:[String]!):Data!
  rpPage3(data:[String]!):Data!
  rpPage4(data:[String]!):Data!
  rpPage5(data:[String]!):Data!
  rpPage6(data:[String]!):Data!
  rpPage7(data:[String]!):Data!
  rpPage8(data:[String]!):Data!

  rpValidadorPage7(data:[String]!):Data!
  rpValidadorPage8(data:[String]!):Data!


  eeoPage1(data:[String]!):Data!
  eeoPage2(data:[String]!):Data!
  eeoPage3(data:[String]!):Data!
  eeoPage4(data:[String]!):Data!
  eeoPage5(data:[String]!):Data!
  eeoPage6(data:[String]!):Data!
  eeoPage7(data:[String]!):Data!
  eeoPage8(data:[String]!):Data!
  eeoPage9(data:[String]!):Data!
  eeoPage10(data:[String]!):Data!
  eeoPage11(data:[String]!):Data!
  eeoPage12(data:[String]!):Data!
  eeoPage13(data:[String]!):Data!
  eeoPage14(data:[String]!):Data!

  rpPoliticaPrivacidad(data:[String]!):SurveyData!
  atsPoliticaPrivacidad(data:[String]!):SurveyData!
  eeoPoliticaPrivacidad(data:[String]!):SurveyData!

 sendMail(data: [String]!): Data!
 getAdmin(data:[String]!):[Admin]
 authRegisterSingleEmployee(data:[String]!):[regMAx]
inactiveAdmin(data:[String]!):Auth!
registerSucursales(data:[String]!):Data!
registerApartments(data:[String]!):Data!
registerPuesto(data:[String]!):Data!
deleteEmployees(data:[String]!):Data!  
deleteSucursales(data:[String]!):Data!  
deleteDeptos(data:[String]!):Data! 
deletePuestos(data:[String]!):Data! 

updateEmployees(data:[String]!):Data! 
updateSucursales(data:[String]!):Data! 
updateDeptos(data:[String]!):Data! 
updatePuestos(data:[String]!):Data! 
addPeriodo(data:[String]!):Data! 
  deletePeriodo(data: [String]!):[Data]
  updatePeriodo(data: [String]!):[Data]
}

type Sucursales {
id:String,
nombreSucursal:String,
calle:String,
numExt:String,
numInt:String,
colonia:String,
CP:String,
Ciudad:String,
Estado:String,
rfc:String,
telefono:String,
correo:String,
fk_administrador:String
}

type resultPonderacion  {
id:String
siempre:String
casisiempre:String
algunasveces:String
casinunca:String
nunca:String
}

type Deptos {
id:String,
nombre:String,
fk_Administrador:String
}

type Puestos {
id:String,
nombre:String,
fk_Administrador:String
}

type resCorreo{
ATSContestado:String
}
type resCorreoRP {
  RPContestado:String
}
type resCorreoEEO {
  EEOContestado:String
}

type Employees{
  id:String
  nombre:String
  ApellidoP:String,
  ApellidoM:String,
  Sexo:String
  AreaTrabajo:String
  Puesto:String
  CentroTrabajo:String
}


type  JsonEmployee{

  id:String,
  nombre: String,
  ApellidoP: String,
  ApellidoM:String,
  Curp:String,
  rfc:String,
  FechaNacimiento:String,
  Sexo:String,
  cp:String,
  EstadoCivil:String,
  correo:String,
  AreaTrabajo:String,
  Puesto:String,
  Ciudad:String,
  NivelEstudios:String,
  TipoPersonal:String,
  JornadaTrabajo:String,
  TipoContratacion:String,
  TiempoPuesto:String,
  ExperienciaLaboral:String,
  RotacionTurnos:String,
  fk_administrador:String,
  ATSContestado:String,
  RPContestado:String,
  EEOContestado:String
}

type Auth {
message:String!
token:String!
id:String
nombre:String
Apellidos:String
RFC:String
RazonSocial:String
Usuario:String
correo:String
Activo:String
}

type regMAx{

max:String!

}


type respuestas {
    id:String,
    Respuestas:String,
    fk_preguntasATS:String,
    fk_Empleados:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    CP:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    Ciudad:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}

    type employeActive{
    id:String, 
    EmpleadoActivo:String,

    }
       type depActive{
    id:String, 
    DepartamentoActivo:String,

    }
   type sucuActive{
    id:String, 
    SucursalActiva:String,

    }
  type puesActive{
    id:String, 
    PuestoActivo:String,

    }
type periodo {
  idEventos:String
  fk_administrador:String
  evento:String
}
type respuestasRP {
    id:String,
    Respuestas:String,
    fk_preguntasRP:String,
    fk_EmpleadosRP:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    CP:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    Ciudad:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}

type respuestasEEO {
    id:String,
    Respuestas:String,
    fk_preguntasEEO:String,
    fk_Empleados:String,
    nombre: String,
    ApellidoP:String,
    ApellidoM:String,
    Curp:String,
    RFC:String,
    FechaNacimiento:String,
    Sexo:String,
    CP:String,
    EstadoCivil:String,
    correo:String,
    AreaTrabajo:String,
    Puesto:String,
    Ciudad:String,
    NivelEstudios:String,
    TipoPersonal:String,
    JornadaTrabajo:String,
    TipoContratacion:String,
    TiempoPuesto:String,
    ExperienciaLaboral:String,
    RotacionTurnos:String,
    fk_administrador:String,
    fk_correos:String
}

type Admin {
id:String!
 }
input UserCreateInput {
  first_name: String
  last_name: String
  rfc:String!
  razon_social:String!
  email: String!
  password: String!
}


input InsertData {
idempresas:Int!
rfc:String!
razon_social:String!
telefono1:String!
telefono2:String
email1:String!
email2:String!
direccion:String!
}


# type data {
#   nombre: String
#   idempresas: String
#   rfc: String
#   razon_social: String
#   telefono1: String
# }

# type File {
#     email: String!
#   }

type SurveyData {
  nombre:String
  ApellidoP:String
  ApellidoM:String
  correo:String
  message: String
}

type Data {
  message: String
}

type MaxidEmployeesResolves{
  nombre:String
  ApellidoP:String
  ApellidoM:String
  correo:String
  ATSContestado:String
}
type idEmployees{
id:String

}