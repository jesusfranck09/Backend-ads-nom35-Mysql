scalar Uploadd

 type Query{
      getUsersTableEmployees(email:String):[JsonEmployee]
 }        
type Mutation {
  signup(data: UserCreateInput!): Auth!
  login(email: String!, password: String!): Auth!
  createUser(data: UserCreateInput!): Auth!
  registerEmployee(data:[String]!):Data!
  registerRS(data:[String]):Data
  registerSingleEmployee(data:[String]!):Data!
  atsPage1(data:[String]!):Data!
  atsPage2(data:[String]!):Data!
  atsPage3(data:[String]!):Data!
  atsPage4(data:[String]!):Data!

  rpPage1(data:[String]!):Data!
  rpPage2(data:[String]!):Data!
  rpPage3(data:[String]!):Data!
  rpPage4(data:[String]!):Data!
  rpPage5(data:[String]!):Data!
  rpPage6(data:[String]!):Data!
  rpPage7(data:[String]!):Data!
  rpPage8(data:[String]!):Data!

  rpValidadorPage7(data:[String]!):Data!
  rpValidadorPage8(data:[String]!):Data!

  rpPoliticaPrivacidad(data:[String]!):Data!
  atsPoliticaPrivacidad(data:[String]!):Data!
}

type  JsonEmployee{


  nombre: String,
  Apellidos: String,
  RFC:String,
  RazonSocial:String,
  Usuario:String,
  correo:String,
  # correoAdmin:String!
}

type Auth {
message:String!
token:String!
}

# type data {
#   nombre: String,
#   Apellidos: String,
#   RFC: String,
#   RazonSocial:String,
#   Usuario:String,
#   correo:String,
# }

input UserCreateInput {
  first_name: String
  last_name: String
  rfc:String!
  razon_social:String!
  user:String!
  email: String!
  password: String!
}


input InsertData {
idempresas:Int!
rfc:String!
razon_social:String!
telefono1:String!
telefono2:String
email1:String!
email2:String!
direccion:String!
}


# type data {
#   nombre: String
#   idempresas: String
#   rfc: String
#   razon_social: String
#   telefono1: String
# }

# type File {
#     email: String!
#   }

type Data {
  message: String
}